<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <context:property-placeholder location="classpath:conf.properties"/>
    <context:component-scan base-package="cn.edu.wic.ssm"/> 
    <mvc:annotation-driven/>
    <mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/*"/>
    		<bean class="cn.edu.wic.ssm.HrmTool.AuthorizedIntercept"></bean>
    	</mvc:interceptor>
    </mvc:interceptors>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<mvc:resources mapping="/res/**" location="/res/"/>
	
	<!-- <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error"/>
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error/exception</prop>
			</props>
		</property>
	</bean> -->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="20971520"/>  
	</bean>  
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
		<!-- 基本属性 url、user、password -->  
        <property name="driverClassName" value="${db.driverClass}" />
	    <property name="url" value="${db.url}" />  
	    <property name="username" value="${db.username}" />  
	    <property name="password" value="${db.password}" />  
	    <property name="connectionProperties" value="config.decrypt=true" />  
	        
	    <!-- 配置初始化大小、最小、最大 -->  
	    <property name="initialSize" value="1" />  
	    <property name="minIdle" value="1" />   
	    <property name="maxActive" value="20" />  
	   
	    <!-- 配置获取连接等待超时的时间 -->  
	    <property name="maxWait" value="60000" />  
	   
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	   
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	    
	    <property name="validationQuery" value="SELECT 'x'" />  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="false" />  
	    <property name="testOnReturn" value="false" />  
	   
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
	    <property name="poolPreparedStatements" value="true" />  
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" /> 
	    
	    <!-- 打开removeAbandoned功能 -->
	    <property name="removeAbandoned" value="true" />
	    <!-- 1800秒，也就是30分钟 --> 
    	<property name="removeAbandonedTimeout" value="1800" />
    	<!-- 关闭abanded连接时输出错误日志 -->  
   		<property name="logAbandoned" value="true" /> 
	   
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
	    <property name="filters" value="config"/>     
	</bean> 
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop>
			</props>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.edu.wic.ssm.mapper" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
 
	<tx:annotation-driven transaction-manager="transactionManager"/>	
</beans>